[
{
	"uri": "/",
	"title": "AWS DevSecOps Container Pipeline",
	"tags": [],
	"description": "",
	"content": "AWS DevSecOps Container Pipeline Welcome to AWS DevSecOps Container Pipeline workshop. In this workshop Engineers will learn how to secure their container pipeline using AWS and other Cloud Native tools.\nWe will be working through the following topics.\n Introduction   Workshop Setup   Development Environment   Container Builds   Container Pipeline   Running Containers   Conclusion   This will be part Lecture and part hands on.\n"
},
{
	"uri": "/intro/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": " AWS Ambassador O\u0026rsquo;Reilly Author - Networking and Kubernetes: A Layer Approach A Cloud Guru Instructor- Advanced Networking with Kubernetes on AWS Kubernetes Ingress NGINX Maintainer Kube Philly Organizer Cloud Native Director @ Contino  For an intro on Kubernetes please see   "
},
{
	"uri": "/intro/contino/",
	"title": "Contino",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/setup/",
	"title": "Workshop Setup",
	"tags": [],
	"description": "",
	"content": "In this section we are going to set up your development environment on AWS Cloud9, install all the required tools and clone the repository with all our directions etc.\n AWS Cloud9   Cloud 9 Settings Configuration   Workshop tools   "
},
{
	"uri": "/setup/cloud9/",
	"title": "AWS Cloud9",
	"tags": [],
	"description": "",
	"content": " A list of supported browsers for AWS Cloud9 is found here.\n   Launch Cloud9 in your closest region\nCreate a Cloud9 Environment: https://us-west-2.console.aws.amazon.com/cloud9/home?region=us-west-2\nYou\u0026rsquo;ll be prompt to log into your AWS Account in order to provision a Cloud9 Workspace\n  Configure the Cloud9 instance  Review the setup before submitting for creation  Wait for the Cloud9 instance to boot  Increase disk size for your Cloud9 Instance  Increase the disk size of your instances, this will cause your instance to reboot\nWith the docker images and all the other information it would be helpful to have a larger working space.\npip3 install --user --upgrade boto3 export instance_id=$(curl -s http://169.254.169.254/latest/meta-data/instance-id) python -c \u0026#34;import boto3 import os from botocore.exceptions import ClientError ec2 = boto3.client(\u0026#39;ec2\u0026#39;) volume_info = ec2.describe_volumes( Filters=[ { \u0026#39;Name\u0026#39;: \u0026#39;attachment.instance-id\u0026#39;, \u0026#39;Values\u0026#39;: [ os.getenv(\u0026#39;instance_id\u0026#39;) ] } ] ) volume_id = volume_info[\u0026#39;Volumes\u0026#39;][0][\u0026#39;VolumeId\u0026#39;] try: resize = ec2.modify_volume( VolumeId=volume_id, Size=30 ) print(resize) except ClientError as e: if e.response[\u0026#39;Error\u0026#39;][\u0026#39;Code\u0026#39;] == \u0026#39;InvalidParameterValue\u0026#39;: print(\u0026#39;ERROR MESSAGE: {}\u0026#39;.format(e))\u0026#34; if [ $? -eq 0 ]; then sudo reboot fi This will force a reboot of your Cloud9 instance\n"
},
{
	"uri": "/setup/iam/",
	"title": "Cloud 9 Settings Configuration",
	"tags": [],
	"description": "",
	"content": "Create IAM Role   Log into your AWS Account you are using for this workshop.\n  Follow this link to create an IAM role with Administrator access.\n  Confirm that AWS service and EC2 are selected, then click Next: Permissions to view permissions.   Confirm that AdministratorAccess is checked, then click Next: Tags to assign tags.   Take the defaults, and click Next: Review to review.   Enter devsecop-workshop-admin for the Name, and click Create role.   Attach IAM Role to your Cloud9 instance  Click the grey circle button (in top right corner) and select Manage EC2 Instance  Select the instance, then choose Actions / Security / Modify IAM Role  Choose devsecop-workshop-admin from the IAM Role dropdown, and select Save   Update Cloud9 IAM Settings Return to your Cloud9 workspace and click the gear icon (in top right corner)\n Open Project Settings Select AWS SETTINGS Turn off AWS managed temporary credentials  Let\u0026rsquo;s make sure we have the right settings with the AWS CLI.\nTo ensure temporary credentials arenâ€™t already in place we will also remove any existing credentials file:\nrm -vf ${HOME}/.aws/credentials\nUse the GetCallerIdentity CLI command to validate that the Cloud9 IDE is using the correct IAM role.\naws sts get-caller-identity --query Arn | grep devsecops-workshop-admin -q \u0026amp;\u0026amp; echo \u0026quot;IAM role valid\u0026quot; || echo \u0026quot;IAM role NOT valid\u0026quot;\nChange EC2 Instance Settings  Open Project Settings Select EC2 Instance Change Stop my environment to a day.  "
},
{
	"uri": "/setup/tools/",
	"title": "Workshop tools",
	"tags": [],
	"description": "",
	"content": "In order for us to continue with the exercises, there are several tools that our needed to be installed on our Cloud9 instance.\nYou can download the entire repo with git\ngit clone https://github.com/strongjz/aws-container-devsecops\nOr Download the script here.\n  Scripts   tools-install.sh  (1 kb)    The script will install\n docker kind terraform eksctl kubectl helm  Navigate to where you downloaded the installation script.\ncd aws-container-devsecops/content/setup/clone.files/\nsudo bash ./tools-install.sh\n  Expand here is what it looks like in its entirety   :~/environment $ git clone https://github.com/strongjz/aws-container-devsecops Cloning into \u0026#39;aws-container-devsecops\u0026#39;... remote: Enumerating objects: 595, done. remote: Counting objects: 100% (595/595), done. remote: Compressing objects: 100% (399/399), done. remote: Total 595 (delta 170), reused 560 (delta 141), pack-reused 0 Receiving objects: 100% (595/595), 8.95 MiB | 23.25 MiB/s, done. Resolving deltas: 100% (170/170), done. ~/environment $ cd aws-container-devsecops/content/setup/^C ~/environment $ rm -rf aws-container-devsecops/ ~/environment $ git clone https://github.com/strongjz/aws-container-devsecops Cloning into \u0026#39;aws-container-devsecops\u0026#39;... remote: Enumerating objects: 624, done. remote: Counting objects: 100% (624/624), done. remote: Compressing objects: 100% (410/410), done. remote: Total 624 (delta 187), reused 587 (delta 156), pack-reused 0 Receiving objects: 100% (624/624), 8.95 MiB | 18.59 MiB/s, done. Resolving deltas: 100% (187/187), done. ~/environment $ cd aws-container-devsecops/content/setup/clone.files/ ~/environment/aws-container-devsecops/content/setup/clone.files (main) $ sudo Display all 2327 possibilities? (y or n) ~/environment/aws-container-devsecops/content/setup/clone.files (main) $ sudo ls tools-install.sh ~/environment/aws-container-devsecops/content/setup/clone.files (main) $ ^C ~/environment/aws-container-devsecops/content/setup/clone.files (main) $ sudo bash tools-install.sh INSTALLING docker Installing docker Loaded plugins: extras_suggestions, langpacks, priorities, update-motd Cleaning repos: amzn2-core amzn2extra-docker amzn2extra-epel amzn2extra-lamp-mariadb10.2-php7.2 epel hashicorp 35 metadata files removed 16 sqlite files removed 0 metadata files removed Loaded plugins: extras_suggestions, langpacks, priorities, update-motd amzn2-core | 3.7 kB 00:00:00 amzn2extra-docker | 3.0 kB 00:00:00 amzn2extra-epel | 3.0 kB 00:00:00 amzn2extra-lamp-mariadb10.2-php7.2 | 3.0 kB 00:00:00 epel/x86_64/metalink | 15 kB 00:00:00 epel | 4.7 kB 00:00:00 hashicorp | 1.4 kB 00:00:00 (1/13): amzn2-core/2/x86_64/group_gz | 2.5 kB 00:00:00 (2/13): amzn2-core/2/x86_64/updateinfo | 405 kB 00:00:00 (3/13): amzn2extra-epel/2/x86_64/primary_db | 1.8 kB 00:00:00 (4/13): amzn2extra-lamp-mariadb10.2-php7.2/2/x86_64/updateinfo | 76 B 00:00:00 (5/13): amzn2extra-lamp-mariadb10.2-php7.2/2/x86_64/primary_db | 506 kB 00:00:00 (6/13): amzn2extra-epel/2/x86_64/updateinfo | 76 B 00:00:00 (7/13): amzn2extra-docker/2/x86_64/primary_db | 79 kB 00:00:00 (8/13): amzn2extra-docker/2/x86_64/updateinfo | 76 B 00:00:00 (9/13): epel/x86_64/group_gz | 96 kB 00:00:00 (10/13): epel/x86_64/updateinfo | 1.0 MB 00:00:00 (11/13): epel/x86_64/primary_db | 6.9 MB 00:00:00 (12/13): hashicorp/2/x86_64/primary | 55 kB 00:00:00 (13/13): amzn2-core/2/x86_64/primary_db | 56 MB 00:00:00 hashicorp 384/384 242 packages excluded due to repository priority protections Resolving Dependencies --\u0026gt; Running transaction check ---\u0026gt; Package docker.x86_64 0:20.10.4-1.amzn2 will be installed --\u0026gt; Finished Dependency Resolution Dependencies Resolved ========================================================================================================================================== Package Arch Version Repository Size ========================================================================================================================================== Installing: docker x86_64 20.10.4-1.amzn2 amzn2extra-docker 32 M Transaction Summary ========================================================================================================================================== Install 1 Package Total download size: 32 M Installed size: 136 M Downloading packages: docker-20.10.4-1.amzn2.x86_64.rpm | 32 MB 00:00:00 Running transaction check Running transaction test Transaction test succeeded Running transaction Installing : docker-20.10.4-1.amzn2.x86_64 1/1 Verifying : docker-20.10.4-1.amzn2.x86_64 1/1 Installed: docker.x86_64 0:20.10.4-1.amzn2 Complete! 0 ansible2 available \\ [ =2.4.2 =2.4.6 =2.8 =stable ] 2 httpd_modules available [ =1.0 =stable ] 3 memcached1.5 available \\ [ =1.5.1 =1.5.16 =1.5.17 ] 5 postgresql9.6 available \\ [ =9.6.6 =9.6.8 =stable ] 6 postgresql10 available [ =10 =stable ] 9 R3.4 available [ =3.4.3 =stable ] 10 rust1 available \\ [ =1.22.1 =1.26.0 =1.26.1 =1.27.2 =1.31.0 =1.38.0 =stable ] 11 vim available [ =8.0 =stable ] 15 php7.2 available \\ [ =7.2.0 =7.2.4 =7.2.5 =7.2.8 =7.2.11 =7.2.13 =7.2.14 =7.2.16 =7.2.17 =7.2.19 =7.2.21 =7.2.22 =7.2.23 =7.2.24 =7.2.26 =stable ] 17 lamp-mariadb10.2-php7.2=latest enabled \\ [ =10.2.10_7.2.0 =10.2.10_7.2.4 =10.2.10_7.2.5 =10.2.10_7.2.8 =10.2.10_7.2.11 =10.2.10_7.2.13 =10.2.10_7.2.14 =10.2.10_7.2.16 =10.2.10_7.2.17 =10.2.10_7.2.19 =10.2.10_7.2.22 =10.2.10_7.2.23 =10.2.10_7.2.24 =stable ] 18 libreoffice available \\ [ =5.0.6.2_15 =5.3.6.1 =stable ] 19 gimp available [ =2.8.22 ] 20 docker=latest enabled \\ [ =17.12.1 =18.03.1 =18.06.1 =18.09.9 =stable ] 21 mate-desktop1.x available \\ [ =1.19.0 =1.20.0 =stable ] 22 GraphicsMagick1.3 available \\ [ =1.3.29 =1.3.32 =1.3.34 =stable ] 23 tomcat8.5 available \\ [ =8.5.31 =8.5.32 =8.5.38 =8.5.40 =8.5.42 =8.5.50 =stable ] 24 epel=latest enabled [ =7.11 =stable ] 25 testing available [ =1.0 =stable ] 26 ecs available [ =stable ] 27 corretto8 available \\ [ =1.8.0_192 =1.8.0_202 =1.8.0_212 =1.8.0_222 =1.8.0_232 =1.8.0_242 =stable ] 28 firecracker available [ =0.11 =stable ] 29 golang1.11 available \\ [ =1.11.3 =1.11.11 =1.11.13 =stable ] 30 squid4 available [ =4 =stable ] _ php7.3 available \\ [ =7.3.2 =7.3.3 =7.3.4 =7.3.6 =7.3.8 =7.3.9 =7.3.10 =7.3.11 =7.3.13 =stable ] 32 lustre2.10 available \\ [ =2.10.5 =2.10.8 =stable ] 33 java-openjdk11 available [ =11 =stable ] 34 lynis available [ =stable ] 35 kernel-ng available [ =stable ] 36 BCC available [ =0.x =stable ] 37 mono available [ =5.x =stable ] 38 nginx1 available [ =stable ] 39 ruby2.6 available [ =2.6 =stable ] 40 mock available [ =stable ] 41 postgresql11 available [ =11 =stable ] _ php7.4 available [ =stable ] 43 livepatch available [ =stable ] 44 python3.8 available [ =stable ] 45 haproxy2 available [ =stable ] 46 collectd available [ =stable ] 47 aws-nitro-enclaves-cli available [ =stable ] 48 R4 available [ =stable ] 49 kernel-5.4 available [ =stable ] 50 selinux-ng available [ =stable ] _ php8.0 available [ =stable ] 52 tomcat9 available [ =stable ] 53 unbound1.13 available [ =stable ] _ mariadb10.5 available [ =stable ] 55 kernel-5.10 available [ =stable ] 56 redis6 available [ =stable ] 57 ruby3.0 available [ =stable ] 58 postgresql12 available [ =stable ] 59 postgresql13 available [ =stable ] 60 mock2 available [ =stable ] Loaded plugins: extras_suggestions, langpacks, priorities, update-motd 242 packages excluded due to repository priority protections Package docker-20.10.4-1.amzn2.x86_64 already installed and latest version Nothing to do Redirecting to /bin/systemctl start docker.service Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the \u0026#34;hello-world\u0026#34; image from the Docker Hub. (amd64) 3. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://hub.docker.com/ For more examples and ideas, visit: https://docs.docker.com/get-started/ INSTALLING kind % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 98 100 98 0 0 267 0 --:--:-- --:--:-- --:--:-- 267 100 624 100 624 0 0 1116 0 --:--:-- --:--:-- --:--:-- 1116 100 6660k 100 6660k 0 0 5931k 0 0:00:01 0:00:01 --:--:-- 15.7M INSTALLING terraform Loaded plugins: extras_suggestions, langpacks, priorities, update-motd Existing lock /var/run/yum.pid: another copy is running as pid 25715. Another app is currently holding the yum lock; waiting for it to exit... The other application is: yum Memory : 194 M RSS (410 MB VSZ) Started: Mon Aug 16 19:23:47 2021 - 00:07 ago State : Running, pid: 25715 Another app is currently holding the yum lock; waiting for it to exit... The other application is: yum Memory : 298 M RSS (514 MB VSZ) Started: Mon Aug 16 19:23:47 2021 - 00:09 ago State : Running, pid: 25715 Another app is currently holding the yum lock; waiting for it to exit... The other application is: yum Memory : 316 M RSS (532 MB VSZ) Started: Mon Aug 16 19:23:47 2021 - 00:11 ago State : Running, pid: 25715 Another app is currently holding the yum lock; waiting for it to exit... The other application is: yum Memory : 316 M RSS (532 MB VSZ) Started: Mon Aug 16 19:23:47 2021 - 00:13 ago State : Running, pid: 25715 242 packages excluded due to repository priority protections Resolving Dependencies --\u0026gt; Running transaction check ---\u0026gt; Package terraform.x86_64 0:1.0.4-1 will be installed --\u0026gt; Finished Dependency Resolution Dependencies Resolved ========================================================================================================================================== Package Arch Version Repository Size ========================================================================================================================================== Installing: terraform x86_64 1.0.4-1 hashicorp 25 M Transaction Summary ========================================================================================================================================== Install 1 Package Total download size: 25 M Installed size: 75 M Downloading packages: terraform-1.0.4-1.x86_64.rpm | 25 MB 00:00:00 Running transaction check Running transaction test Transaction test succeeded Running transaction Installing : terraform-1.0.4-1.x86_64 1/1 Verifying : terraform-1.0.4-1.x86_64 1/1 Installed: terraform.x86_64 0:1.0.4-1 Complete! INSTALLING eksctl INSTALLING kubectl % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 44.2M 100 44.2M 0 0 90.4M 0 --:--:-- --:--:-- --:--:-- 90.3M INSTALLING helm    "
},
{
	"uri": "/development/",
	"title": "Development Environment",
	"tags": [],
	"description": "",
	"content": "  Code Signing   Linting   Open Web Application Security Project   Pre Commit   3 Musketeers   "
},
{
	"uri": "/development/signing/",
	"title": "Code Signing",
	"tags": [],
	"description": "",
	"content": "Needed:\n GPG Key Keybase - optional Github Account  Generating a GPG Key  Generate a with gpg gpg --full-generate-key Select what key you want to use, ECC (sign and encrypt) default Select what elliptic curve you want, Curve 25519 default Fill out your name and your email address. Make sure this matches the one in your GitHub account. Add a comment if you want to remind you what the key is for. You may be prompted for a passphrase to add to the key for extra security  Here is what the prompts will look like.   Expand here is what it looks like in its entirety   Â± |main U:26 ?:9 âœ—| â†’ gpg --full-generate-key gpg (GnuPG) 2.3.1; Copyright (C) 2021 Free Software Foundation, Inc. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Please select what kind of key you want: (1) RSA and RSA (2) DSA and Elgamal (3) DSA (sign only) (4) RSA (sign only) (9) ECC (sign and encrypt) *default* (10) ECC (sign only) (14) Existing key from card Your selection? 9 Please select which elliptic curve you want: (1) Curve 25519 *default* (4) NIST P-384 (6) Brainpool P-256 Your selection? 1 Please specify how long the key should be valid. 0 = key does not expire \u0026lt;n\u0026gt; = key expires in n days \u0026lt;n\u0026gt;w = key expires in n weeks \u0026lt;n\u0026gt;m = key expires in n months \u0026lt;n\u0026gt;y = key expires in n years Key is valid for? (0) 0 Key does not expire at all Is this correct? (y/N) y GnuPG needs to construct a user ID to identify your key. Real name: James Strong Email address: strong.james.e@gmail.com Comment: testing for workshop You selected this USER-ID: \u0026#34;James Strong (testing for workshop) \u0026lt;strong.james.e@gmail.com\u0026gt;\u0026#34; Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O We need to generate a lot of random bytes. It is a good idea to perform some other action (type on the keyboard, move the mouse, utilize the disks) during the prime generation; this gives the random number generator a better chance to gain enough entropy. We need to generate a lot of random bytes. It is a good idea to perform some other action (type on the keyboard, move the mouse, utilize the disks) during the prime generation; this gives the random number generator a better chance to gain enough entropy. gpg: key 8246A1EC900B5E30 marked as ultimately trusted gpg: directory \u0026#39;/Users/strongjz/.gnupg/openpgp-revocs.d\u0026#39; created gpg: revocation certificate stored as \u0026#39;/Users/strongjz/.gnupg/openpgp-revocs.d/3E0424931246D33A86890BC78246A1EC900B5E30.rev\u0026#39; public and secret key created and signed. pub ed25519 2021-08-17 [SC] 3E0424931246D33A86890BC78246A1EC900B5E30 uid James Strong (testing for workshop) \u0026lt;strong.james.e@gmail.com\u0026gt; sub cv25519 2021-08-17 [E]    Added it to Github Account  Export public key  gpg --list-keys gpg --armor --export 3E0424931246D33A86890BC78246A1EC900B5E30 -----BEGIN PGP PUBLIC KEY BLOCK----- mDMEYRwLhBYJKwYBBAHaRw8BAQdAsQbWuqV2P5y1HXlkoFTM9qyrypc+zB9YO/fI DYAjZ6C0PkphbWVzIFN0cm9uZyAodGVzdGluZyBmb3Igd29ya3Nob3ApIDxzdHJv bmcuamFtZXMuZUBnbWFpbC5jb20+iJQEExYKADwWIQQ+BCSTEkbTOoaJC8eCRqHs kAteMAUCYRwLhAIbAwULCQgHAgMiAgEGFQoJCAsCBBYCAwECHgcCF4AACgkQgkah 7JALXjDeKgEA1JtsGyIEg8ZUANvkbJfdNEs2e1Ns/M3PcRYMUxc1yugA/3tHEDJb Fw+QghwzcHXWsqlkAmj5TZglHyfYsbwlgzoLuDgEYRwLhBIKKwYBBAGXVQEFAQEH QGg2S81eJftEiG4AeiKC3D6H94y1ifSuTZ6BBofcilsTAwEIB4h4BBgWCgAgFiEE PgQkkxJG0zqGiQvHgkah7JALXjAFAmEcC4QCGwwACgkQgkah7JALXjCVgwD+Ob4+ fG5zzmP/Hg13SFsxLZc+5EKrxHJ1z+bNQQ5ARxYBANbOuPnxLtPL4eY4TqIY0k1X 8HmXv9JXEwMHLYiN4fwF =03gp -----END PGP PUBLIC KEY BLOCK----- Open https://github.com/settings/keys  Copy and Paste the Public Key into your GitHub account  Add to git config and verify  Get the key id for the one we just created.  $ gpg --list-secret-keys --keyid-format LONG sec ed25519/8246A1EC900B5E30 2021-08-17 [SC] 3E0424931246D33A86890BC78246A1EC900B5E30 uid [ultimate] James Strong (testing for workshop) \u0026lt;strong.james.e@gmail.com\u0026gt; ssb cv25519/0BAFF11345FB8338 2021-08-17 [E] Update git config to use the key.  $ git config --global user.signingkey 3E0424931246D33A86890BC78246A1EC900B5E30 $ git config --global commit.gpgsign true Test a Commit.  Â± |main S:2 U:28 ?:11 âœ—| â†’ git add -A Â± |main S:42 âœ—| â†’ git commit -m \u0026#34;signing \u0026#34; [main b2a6fb5] signing In the commit history you can see a \u0026ldquo;Verified\u0026rdquo; tag on your commits now\nMake sure to store this GPG private key in a secure location\n To export the key use this.\n Identify your private key: gpg --list-secret-keys strong.james.e@gmail.com  sec ed25519 2021-08-17 [SC] 3E0424931246D33A86890BC78246A1EC900B5E30 uid [ultimate] James Strong (testing for workshop) \u0026lt;strong.james.e@gmail.com\u0026gt; ssb cv25519 2021-08-17 [E] Run this command to export your key: gpg --export-secret-keys 3E0424931246D33A86890BC78246A1EC900B5E30 \u0026gt; private.key  If you have a passphrase on the key you\u0026rsquo;ll have to enter it to export it.\n Copy the key file to another secure location.\n  To import on a new machine, run\n  gpg --import private.key Sources:\nUsing Keybase: https://github.com/pstadler/keybase-gpg-github\nPlain GPG: https://docs.github.com/en/github/authenticating-to-github/managing-commit-signature-verification/generating-a-new-gpg-key\n"
},
{
	"uri": "/development/linting/",
	"title": "Linting",
	"tags": [],
	"description": "",
	"content": "Linting is the process of analyzing code for syntax issues; it can aid in finding bugs and performance issues, offers simplifications, and enforces style rules.\nOther notable uses for Linting:\n formatting discrepancy, go fmt. non-adherence to coding standards and conventions, shellchecker for example diagnosing possible logical errors in your applications. go vet Interpreted languages like Python, Ruby, and JavaScript benefit from linting, as these languages donâ€™t have a compiling phase to display errors before execution.  Here is great collection of Linters for many languages\nhttps://github.com/collections/clean-code-linters\nMy go to everyday linters\nhttps://github.com/koalaman/shellcheck\nSome languages like go have them builtin\n2021-08-24 09:47:02 âŒš strongjz-macbook in ~/Documents/code/go/src/github.com/strongjz/go_example_app Â± |master âœ“| â†’ go vet go: downloading github.com/gin-gonic/gin v1.6.2 go: downloading github.com/gin-contrib/sse v0.1.0 go: downloading github.com/ugorji/go v1.1.7 go: downloading github.com/golang/protobuf v1.3.3 go: downloading golang.org/x/sys v0.0.0-20200116001909-b77594299b42 go: downloading github.com/go-playground/validator/v10 v10.2.0 go: downloading github.com/ugorji/go/codec v1.1.7 go: downloading github.com/leodido/go-urn v1.2.0 $ go doc cmd/vet Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string. Vet uses heuristics that do not guarantee all reports are genuine problems, but it can find errors not caught by the compilers. It can be invoked three ways: By package, from the go tool: go vet package/path/name vets the package whose path is provided. By files: go tool vet source/directory/*.go : For Dockerfiles we can use tools like hadolint\n:~/environment $ docker run --rm -i hadolint/hadolint:v2.7.0 \u0026lt; ./content/development/development.files/Dockerfile -:1 DL3006 warning: Always tag the version of an image explicitly -:2 DL3015 info: Avoid additional packages by specifying `--no-install-recommends` -:2 DL3009 info: Delete the apt-get lists after installing something -:2 SC2154 warning: node_verion is referenced but not assigned (did you mean \u0026#39;node_version\u0026#39;?). -:4 DL3045 warning: `COPY` to a relative destination without `WORKDIR` set. -:5 DL3003 warning: Use WORKDIR to switch to a directory -:5 DL3016 warning: Pin versions in npm. Instead of `npm install \u0026lt;package\u0026gt;` use `npm install \u0026lt;package\u0026gt;@\u0026lt;version\u0026gt;` -:8 DL3011 error: Valid UNIX ports range from 0 to 65535 "
},
{
	"uri": "/development/owasp/",
	"title": "Open Web Application Security Project",
	"tags": [],
	"description": "",
	"content": "The OWASP Top 10 is a standard awareness document for developers and web application security. It represents a broad consensus about the most critical security risks to web applications.\nOWASP Top 10   A1:2017-Injection   Injection flaws, such as SQL, NoSQL, OS, and LDAP injection, occur when untrusted data is sent to an interpreter as part of a command or query. The attackerâ€™s hostile data can trick the interpreter into executing unintended commands or accessing data without proper authorization.\n    A2:2017-Broken Authentication   Application functions related to authentication and session management are often implemented incorrectly, allowing attackers to compromise passwords, keys, or session tokens, or to exploit other implementation flaws to assume other usersâ€™ identities temporarily or permanently.\n    A3:2017-Sensitive Data Exposure   Many web applications and APIs do not properly protect sensitive data, such as financial, healthcare, and PII. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data may be compromised without extra protection, such as encryption at rest or in transit, and requires special precautions when exchanged with the browser.\n    A4:2017-XML External Entities (XXE)   Many older or poorly configured XML processors evaluate external entity references within XML documents. External entities can be used to disclose internal files using the file URI handler, internal file shares, internal port scanning, remote code execution, and denial of service attacks.\n    A5:2017-Broken Access Control   Restrictions on what authenticated users are allowed to do are often not properly enforced. Attackers can exploit these flaws to access unauthorized functionality and/or data, such as access other usersâ€™ accounts, view sensitive files, modify other usersâ€™ data, change access rights, etc.\n    A6:2017-Security Misconfiguration   Security misconfiguration is the most commonly seen issue. This is commonly a result of insecure default configurations, incomplete or ad hoc configurations, open cloud storage, misconfigured HTTP headers, and verbose error messages containing sensitive information. Not only must all operating systems, frameworks, libraries, and applications be securely configured, but they must be patched/upgraded in a timely fashion.\n    A7:2017-Cross-Site Scripting XSS   XSS flaws occur whenever an application includes untrusted data in a new web page without proper validation or escaping, or updates an existing web page with user-supplied data using a browser API that can create HTML or JavaScript. XSS allows attackers to execute scripts in the victimâ€™s browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites.\n    A8:2017-Insecure Deserialization   Insecure deserialization often leads to remote code execution. Even if deserialization flaws do not result in remote code execution, they can be used to perform attacks, including replay attacks, injection attacks, and privilege escalation attacks.\n    A9:2017-Using Components with Known Vulnerabilities   Components, such as libraries, frameworks, and other software modules, run with the same privileges as the application. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications and APIs using components with known vulnerabilities may undermine application defenses and enable various attacks and impacts.\n    A10:2017-Insufficient Logging \u0026amp; Monitoring   Insufficient logging and monitoring, coupled with missing or ineffective integration with incident response, allows attackers to further attack systems, maintain persistence, pivot to more systems, and tamper, extract, or destroy data. Most breach studies show time to detect a breach is over 200 days, typically detected by external parties rather than internal processes or monitoring.\n  Handy Cheatsheets https://cheatsheetseries.owasp.org/index.html\nSecure Coding Practices https://github.com/OWASP/Go-SCP/blob/master/dist/go-webapp-scp.pdf\n"
},
{
	"uri": "/development/pre-commit/",
	"title": "Pre Commit",
	"tags": [],
	"description": "",
	"content": "Introduction The pre-commit hook is run first, before you even type in a commit message. Itâ€™s used to inspect the snapshot thatâ€™s about to be committed,\nIt can be used to detect\n missing semicolons trailing whitespace debug statements aws credentials private keys  Pre-commit is a framework for managing and maintaining multi-language pre-commit hooks.\nhttps://github.com/pre-commit/pre-commit\n detect-aws-credentials - Checks for the existence of AWS secrets that you have set up with the AWS CLI. The following arguments are available detect-private-key - Checks for the existence of private keys. check-xml - This hook checks xml files for parseable syntax. check-yaml - This hook checks yaml files for parseable syntax. check-json - This hook checks json files for parseable syntax. check-shebang-scripts-are-executable - Ensures that (non-binary) files with a shebang are executable. pretty-format-json - This hook sets a standard for formatting JSON files. check-merge-conflict - Check for files that contain merge conflict strings.  Install :~/environment $ pip install pre-commit :~/environment $ pre-commit --version pre-commit 1.21.0 Configure We have already created the .pre-commit-config.yaml in the Files directory\nrepos: - repo: https://github.com/pre-commit/pre-commit-hooks rev: v2.3.0 hooks: - id: detect-private-key Test :~/environment $ cd ~/environment/aws-container-devsecops/content/development.files Using the pre-commit hook cli we can run the checks and see that the commit would fail.\n:~/environment $ pre-commit run --all-files Detect Private Key.......................................................Failed - hook id: detect-private-key - exit code: 1 Private key found: content/development/development.files/secret.yaml "
},
{
	"uri": "/development/3-musketeers/",
	"title": "3 Musketeers",
	"tags": [],
	"description": "",
	"content": "Tools used in the 3 Musketeers pattern:\n Make Docker Docker Compose  From https://3musketeers.io/\nConsistency - Run the same commands no matter where you are: Linux, macOS, Windows, CI/CD tools that supports Docker like GitHub Actions, Travis CI, CircleCI, and GitLab CI.\nControl - Take control of languages, versions, and tools you need, and version source control your pipelines with your preferred VCS like GitHub and GitLab.\nConfidence - Test your code and pipelines locally before your CI/CD tool runs it. Feel confident that if it works locally, it will work in your CI/CD server.\n  3M Example   Dockerfile  (0 kb)   Makefile  (0 kb)   docker-compose.yml  (0 kb)    :~/environment $ cd ~/environment/aws-container-devsecops/content/development/3-musketeers.files/ :~/environment $ make echo docker-compose run --rm alpine echo \u0026#39;Hello, World!\u0026#39; [+] Running 1/1 â ¿ Network 3-musketeersfiles_default Created 0.4s [+] Running 2/2 â ¿ alpine Pulled 4.7s â ¿ a0d0a0d46f8b Pull complete 2.9s Hello, World! :~/environment $ "
},
{
	"uri": "/build/",
	"title": "Container Builds",
	"tags": [],
	"description": "",
	"content": " Minimal OS  Federa CoreOS CoreOSâ€™s Container Linux Rancher OS Ubuntu Core OS AWS BottleRocket VMware Photon OS   One process per container Run with local user Write logs to stdout \u0026amp; stderr Leverage environment variables Separating environmental concerns Mount configuration files  "
},
{
	"uri": "/build/container/",
	"title": "Secure Containers",
	"tags": [],
	"description": "",
	"content": "Baseline  DISABLE ROOT Least Privilege Run time Protections Network policies DISABLE ROOT  Helpers Versioning\n Invest in Strategy Containers follow build Versions of Software Metadata  No really do this Latest Tag\n Avoid using :latest tags Unable to control Unknown updates Versions the way to go Container digest  Reduce, reuse Base Container\n Reduce Build Times Scratch Container golden images  "
},
{
	"uri": "/build/exercise/",
	"title": "Secure Containers Exercise",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/pipeline/",
	"title": "Container Pipeline",
	"tags": [],
	"description": "",
	"content": "  Container Pipeline Exercise   Automating your build pipelines Visibility Troubleshooting Defect Remediation Build small autonomous pieces\nCI/CD Maintain a code repository Automate the build Keep the build fast Make the build self-testing Commit early, commit often Every commit gets built Everyone can see the results of the build Automate the deployment\nSecure Pipelines Signed Images Verify Trusted Images Kickoff Security Assessment\nCI/CD - AWS Codepipeline/Build Stages for Code pipeline\nBuild - Build golang example applications, in a docker container and stores it in the AWS ECR\nInvoke - Runs the Go Report Static Code analysis\nTest - runs any tests in the golang example applications\nDeploy - deploys the application via Code build, aws eks cli and kubectl\n"
},
{
	"uri": "/pipeline/exercise/",
	"title": "Container Pipeline Exercise",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/run/",
	"title": "Running Containers",
	"tags": [],
	"description": "",
	"content": "  Running Containers Exercise      Minimal OS Bottle Rocket Ubuntu Core\nCI/CD - Images should be scanned for CVEâ€™s\nRun time - tools should be deployed that monitor running containers that misbehave\nContinuous scan images in registry for vulnerabilities in the registries, images can run in production but not get updated and deployed\nCreate separate environments for development, test, production and other scenarios, each with specific controls to provide RBAC for container deployment and management activities.\nShared Kernel â€“ Do not mix containerized and non-containerized workloads on the same host instance. (e.g.: if a host is running a web server container, it should not also run a web server as a regularly installed component directly within the host OS). This will also make it easy to apply optimized countermeasures for container protection.\nhttps://github.com/aquasecurity/kube-bench\nNetwork Policies\nPer Namespace if using Kubernetes network policies\nApplications should have their own define with the deployment\nAdmins should have examples so application developers can understand how it impacts their applications\n"
},
{
	"uri": "/run/run.files/exercise/",
	"title": "Running Containers Exercise",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/conclusion/",
	"title": "Conclusion",
	"tags": [],
	"description": "",
	"content": "  CI/CD\n Maintain a code repository Automate the build Keep the build fast Make the build self-testing Commit early, commit often Every commit to the mainline gets built Everyone can see the results of the build Automate the deployment  Security\n Immutable artifacts Static Code Analysis CVE Scanning Least Privileged Network Isolation Run Time protection Signed Commits Signed Images  "
},
{
	"uri": "/run/run.files/falco-demo/nodejs-bad-rest-api/readme/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Demo of falco with bash exec via poorly designed REST API. Introduction This example shows how a server could have a poorly designed API that allowed a client to execute arbitrary programs on the server, and how that behavior can be detected using Sysdig Falco.\nserver.js in this directory defines the server. The poorly designed API is this route handler:\nrouter.get(\u0026#39;/exec/:cmd\u0026#39;, function(req, res) { var output = child_process.execSync(req.params.cmd); res.send(output); }); app.use(\u0026#39;/api\u0026#39;, router); It blindly takes the url portion after /api/exec/\u0026lt;cmd\u0026gt; and tries to execute it. A horrible design choice(!), but allows us to easily show Sysdig falco\u0026rsquo;s capabilities.\nDemo architecture Start everything using docker-compose From this directory, run the following:\n$ docker-compose -f demo.yml up This starts the following containers:\n express_server: simple express server exposing a REST API under the endpoint /api/exec/\u0026lt;cmd\u0026gt;. falco: will detect when you execute a shell via the express server.  Access urls under /api/exec/\u0026lt;cmd\u0026gt; to run arbitrary commands. Run the following commands to execute arbitrary commands like \u0026lsquo;ls\u0026rsquo;, \u0026lsquo;pwd\u0026rsquo;, etc:\n$ curl http://localhost:8181/api/exec/ls demo.yml node_modules package.json README.md server.js $ curl http://localhost:8181/api/exec/pwd .../examples/nodejs-bad-rest-api Try to run bash via /api/exec/bash, falco sends alert. If you try to run bash via /api/exec/bash, falco will generate an alert:\nfalco | 22:26:53.536628076: Warning Shell spawned in a container other than entrypoint (user=root container_id=6f339b8aeb0a container_name=express_server shell=bash parent=sh cmdline=bash ) "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]
