<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Container Pipeline on AWS Container DevSecOps</title>
    <link>//localhost:1313/pipeline/</link>
    <description>Recent content in Container Pipeline on AWS Container DevSecOps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="//localhost:1313/pipeline/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Container Pipeline Exercise Overview</title>
      <link>//localhost:1313/pipeline/intro_exercise/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/pipeline/intro_exercise/</guid>
      <description>AWS CI/CD We are going to deploy a pipeline with AWS Services
Build - Build our golang example applications, in a docker container and stores it in the AWS ECR
Invoke - Runs the Go Report Static Code analysis
Deploy - deploys the application via Code build, aws eks cli and kubectl</description>
    </item>
    
    <item>
      <title>Container Pipeline Exercise</title>
      <link>//localhost:1313/pipeline/exercise/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/pipeline/exercise/</guid>
      <description>First Create the state file s3 bucket aws s3 mb s3://devsecops-james-strong --region us-west-2 make_bucket: devsecops-james-strong Inside our Terraform Directory in the devsecops repo
Update the devsecopspipeline/terraform/config.tf with the bucket name to store terraform state
terraform { backend &amp;#34;s3&amp;#34; { bucket = &amp;#34;devsecops-james-strong&amp;#34; key = &amp;#34;devsecops-james-strong/terraform_state&amp;#34; region = &amp;#34;us-west-2&amp;#34; } } Initialize the Terraform cd devsecopspipeline/ make tf_clean tf_init cd terraform/ &amp;amp;&amp;amp; \ rm -rf .terraform \ rm -rf plan.out cd terraform/ &amp;amp;&amp;amp; \ terraform init Initializing the backend.</description>
    </item>
    
  </channel>
</rss>
